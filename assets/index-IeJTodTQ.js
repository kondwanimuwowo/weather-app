(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))e(o);new MutationObserver(o=>{for(const c of o)if(c.type==="childList")for(const a of c.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&e(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const c={};return o.integrity&&(c.integrity=o.integrity),o.referrerPolicy&&(c.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?c.credentials="include":o.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function e(o){if(o.ep)return;o.ep=!0;const c=t(o);fetch(o.href,c)}})();const m="4FQFL9F4H4WSSKTPHAZV3L2AC",f="https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/";async function w(n,r="today",t="metric"){if(console.log("Fetching weather data for city:",n,"with range:",r,"and unit group:",t),!n||typeof n!="string")throw new Error("Invalid city name provided");try{const e=await fetch(`${f}${encodeURIComponent(n)}/${r}?unitGroup=${t}&key=${m}&contentType=json`);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.json()}catch(e){throw console.error("Failed to fetch weather data:",e.message),e}}async function y(n,r="today",t="metric"){console.log("getWeather called with city:",n,"and unitGroup:",t);try{const e=await w(n,r,t);if(!e||!e.currentConditions)throw new Error("Invalid weather data received");const o=e.resolvedAddress,c=e.currentConditions.temp,a=e.currentConditions.windspeed,d=e.currentConditions.conditions,u=e.currentConditions.humidity,l=e.currentConditions.icon;return console.log("Data Fetched",{currentTemp:c,currentHumidity:u,currentWindspeed:a,currentConditions:d,weatherIcon:l}),{currentTemp:c,currentHumidity:u,currentWindspeed:a,currentConditions:d,weatherIcon:l,address:o}}catch(e){throw console.log("Error fetching weather data:",e.message),e}}async function h(n,r){console.log("Toggling unit group for city:",n,"to",r);try{const t=await y(n,"today",r);if(!t||!t.currentConditions)throw new Error("Invalid weather data received");return t}catch(t){throw console.error("Failed to toggle unit group:",t.message),t}}function s(){const n=document.getElementById("city-input");return n?n.value.trim():"Lusaka"}async function i(n=s()||"Lusaka",r="metric"){const t={cityName:document.querySelector("#city-name"),temperature:document.querySelector("#temperature"),humidity:document.querySelector("#humidity"),windspeed:document.querySelector("#wind"),conditions:document.querySelector("#condition"),weatherIcon:document.querySelector(".icon i")};try{const e=await y(n);if(!e||!e.currentConditions)throw new Error("Invalid weather data received");console.log("Rendering weather data for city:",n,"with unit group:",r);const o=e.weatherIcon;switch(t.cityName.textContent=`${e.address}`,t.temperature.textContent=`${e.currentTemp}Â°C`,t.humidity.textContent=`${e.currentHumidity}%`,t.windspeed.textContent=`${e.currentWindspeed}km/h`,t.conditions.textContent=`${e.currentConditions}`,o){case"clear-day":t.weatherIcon.className="fas fa-sun";break;case"clear-night":t.weatherIcon.className="fas fa-moon";break;case"partly-cloudy-day":t.weatherIcon.className="fas fa-cloud-sun";break;case"cloudy":t.weatherIcon.className="fas fa-cloud";break;case"rain":t.weatherIcon.className="fas fa-cloud-rain";break;default:t.weatherIcon.className="fas fa-question",console.warn(`Unknown weather icon: ${o}`)}}catch(e){throw console.error("Error rendering weather data:",e.message),e}}async function g(){console.log("Initializing App..."),p(),i(),v()}async function p(){console.log("Search handler active");const n=document.querySelector("#search-btn"),r=document.querySelector("#city-input");n.addEventListener("click",async()=>{try{const t=s();t?(console.log(`Searching for city: ${t}`),await i(t)):console.log("No valid city provided")}catch{}}),r.value=""}async function v(){try{const n=document.querySelector("#unit-switch");n.addEventListener("change",async()=>{const r=s();n.checked?(await h(r,"metric"),await i(r,"metric")):(await h(r,"us"),await i(r,"us"))})}catch{}console.log("toggle handler active")}async function C(){try{await g()}catch(n){console.error("Failed to start app:",n.message);const r=document.querySelector("#error-message");r&&(r.textContent="Failed to initialize app. Please try again.",r.style.display="block")}}C();window.addEventListener("unhandledrejection",n=>{console.error("Unhandled promise rejection:",n.reason);const r=document.querySelector("#error-message");r&&(r.textContent="An unexpected error occurred.",r.style.display="block")});
